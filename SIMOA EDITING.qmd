---
title: "SIMOA EDITING"
author: "Pierre-Olivier Couture"
format: html
editor: visual
---

## SIMOA 

This MSc thesis investigates personality-related factors associated with the discontinuation of benzodiazepine receptor agonists (BZRAs) used for sleep. Using a machine learning approach, specifically a random forest model, we compare individuals who have stopped using BZRAs with those who continue to use them. Personality is assessed through multiple validated instruments, including the DBAS-16 (Dysfunctional Beliefs and Attitudes about Sleep), BFI-10 (Big Five Inventory), SURPS (Substance Use Risk Profile Scale), and CISS-21 (Coping Inventory for Stressful Situations). The aim is to identify patterns and predictors that distinguish these two groups and provide insight into the psychological and behavioral factors influencing BZRA use.


## Packages and Data Loading

Below I will include all the packages I installed or libraried in for the project. I will aslo load in the data and clean it in this section so that all other sections can use the pre-created data frames rather having to remake it for each section. 

```{r}
#| label: Packages

#install.packages("writexl")
#install.packages("effectsize")
#install.packages("vcd")
#install.packages("effsize")  


library(effsize)
library(dplyr)
library(readxl)
library(writexl)
library(effectsize)
library(tidyr)
library(stringr)
library(vcd)

```

```{r}
#| label: Data Loading

SIMOA <- read_excel("SIMOA Data Cleaning 9 Jan POC.xlsx", 
    skip = 1)
View(SIMOA)


#| label: Removing Columns
## I will use this text to remove the columns that contain data I will not examine to make the object smaller and easier to manage.

SIMOA <- SIMOA[, !colnames(SIMOA) %in% 
                 c("Complete?", "Consent timestamp", "Survey Completion", "Survey start timestamp", 
                   "Continue with survey? Thank you for your responses so far. You have completed 4 of 10 sections. Would you like to continue with the survey now or save your responses and come back later?",
                   "Continue with survey? We really appreciate your participation and responses so far and understand that this is a very long survey. You just completed the longest section. The remaining survey sections are not nearly as long. Would you like to continue with the survey now or save your responses and come back later?", "...3", "Complete?...4", "Complete?...10", "Complete?...25", "Complete?...52")]

```

## New Data Frames for Specific Groups

Below is the code I used to create objects for all respondents who meet the inclusion criteria, and then further divide it into those that stooped and those that kept using. Creating these objects will make it easier for me when comparing the groups later since I will only need to call on these data frames rather than recreate it all the time. The inclusion criteria are that they indicate they are 65 or over by answering yes or filling in the text answer as something ≥65 and that they were able to indicate what BZRA they used. This is to ensure that the effects we might find can be associated with BZRAs rather than other substances that people can be prescribed to help them sleep such as antihistamines and other medications. 

```{r}
#| label: Creating Object for All Participants

#colnames(SIMOA)

colnames(SIMOA)[46] <- c("sleep_pill_used")

AR <- SIMOA %>%
  filter(
    # Include if age is provided and ≥ 65
    (`What is your age?` >= 65 & !is.na(`What is your age?`)) | 
    # OR if they answered "Yes" to being 65+
    (`Are you 65 or older?` == "Yes"),
    # AND they answered the sleeping pill question
    !is.na(`sleep_pill_used`)
  )

#| label: Creating Object For Those Who Stopped Using

stopped <- SIMOA %>%
  filter(
    # Include if age is provided and ≥ 65
    (`What is your age?` >= 65 & !is.na(`What is your age?`)) | 
    # OR if they answered "Yes" to being 65+
    (`Are you 65 or older?` == "Yes"),
    # AND they answered the sleeping pill question
    !is.na(`sleep_pill_used`),
    # AND they answered that they have stopped using sleeping pills
    (`Have you stopped taking these medications? 'Yes': you no longer take them'No': you take them regularly or every now and again` == "Yes")
  )

#| label: Creating Object For Those Who Are Still Using

using <- SIMOA %>%
  filter(
    # Include if age is provided and ≥ 65
    (`What is your age?` >= 65 & !is.na(`What is your age?`)) | 
    # OR if they answered "Yes" to being 65+
    (`Are you 65 or older?` == "Yes"),
    # AND they answered the sleeping pill question
    !is.na(`sleep_pill_used`),
    # AND they answered that they have stopped using sleeping pills
    (`Have you stopped taking these medications? 'Yes': you no longer take them'No': you take them regularly or every now and again` == "No")
  )

#| label: Recreating Objects After Question Review

# Manually classified based on question review
# Using group: Based on future intent to stop use
additional_using_ids <- c(24, 153, 212, 248, 334, 368, 587, 617)

# Stopped group: Based on past-tense agreement or indicating no current use
additional_stopped_ids <- c(11, 30, 50, 137, 186, 308, 336, 365,
                            413, 434, 445, 452, 467, 469, 503, 571, 625, 668)

#############
## STOPPED ##
#############
stopped <- SIMOA %>%
  filter(
    ((`What is your age?` >= 65 & !is.na(`What is your age?`)) | 
     (`Are you 65 or older?` == "Yes")) &
    !is.na(`sleep_pill_used`) &
    (`Have you stopped taking these medications? 'Yes': you no longer take them'No': you take them regularly or every now and again` == "Yes")
  )

# Add manually identified 'stopped' participants
stopped <- bind_rows(
  stopped,
  SIMOA %>% filter(`Record ID` %in% additional_stopped_ids)
)

###########
## USING ##
###########
using <- SIMOA %>%
  filter(
    ((`What is your age?` >= 65 & !is.na(`What is your age?`)) | 
     (`Are you 65 or older?` == "Yes")) &
    !is.na(`sleep_pill_used`) &
    (`Have you stopped taking these medications? 'Yes': you no longer take them'No': you take them regularly or every now and again` == "No")
  )

# Add manually identified 'using' participants
using <- bind_rows(
  using,
  SIMOA %>% filter(`Record ID` %in% additional_using_ids)
)

```

```{r}
#| label: Classification
## Some people were able to continue in the study despite not indicating whether or not they had stopped. Because of this the AR groups contains 26 more participants than the 'stopped' and 'using' groups. Since this won't look good in a table and may lead to questions or concerns about my data screening process I have decided I will make a subset of the data with these participants and examine which set of questions they answered. Some of the questions were worded for past use (those who stopped) and other questions were worded for present use (those still using). Given this, based on the set of questions they answered that is the group they will be placed in. If participants answered both sets of questions I think it is best to exclude them since we do not know what group they belong too and adding them to any group could change the results. 

## I could also reach out to Dr. Yakovenko about this once I have determined what group they are in and maybe run a sensitivity analysis. That way I can describe the procedure in my methods and then justify that this was done properly because adding them did not have a significant impact on the results. Or if it did, maybe I should not of grouped them how I thought and it may be best to simply remove them from the analysis.

## Based on what I find I will update the screening code above and include a line for the stopped using question that way the AR group will have the same # of people as the 'using' and 'stopped' groups combined. 

# Vector of Record_IDs for people who skipped the question
skipped_ids <- c(11, 24, 30, 50, 137, 153, 186, 212, 308, 334, 336, 365, 368,
                 434, 445, 452, 467, 503, 571, 587, 617, 625, 668, 248, 413, 469)

# Now filter the main dataset
Skipped_question <- SIMOA %>%
  filter(`Record ID` %in% skipped_ids)

# Write the filtered data back to Excel
write_xlsx(Skipped_question, "Skipped Question (Still using or not).xlsx")

Skipped_questions_analysis <- Skipped_question %>%
  select(`Record ID`, `Do you intend to completely stop using sleeping pills within the next year?`) %>%
  arrange(`Do you intend to completely stop using sleeping pills within the next year?`)

## The skipped_questions_analysis showed that Record ID: 24, 153, 212, 248, 334, 368, 587, and 617 indicated they had intentions to stop in the next year either strong or not. This to me would indicate that they are still using and I will add them to that group for now. All other Record IDs will be examined with other responses to see where they best fit in but the Record IDs previously mentioned will be excluded from future analyses since it is assumed they are still using. 

new_skipped_ids <- c(11, 30, 50, 137, 186, 308, 336, 365,
                 434, 445, 452, 467, 503, 571, 625, 668, 413, 469)

Skipped_question <- SIMOA %>%
  filter(`Record ID` %in% new_skipped_ids)

new_skipped_questions_analysis <- Skipped_question %>%
  select(`Record ID`, `Taking my sleeping pills was important for my overall health and wellness.`) %>%
  arrange(`Taking my sleeping pills was important for my overall health and wellness.`)

## The new_skipped_questions_analysis showed that Record ID: 11, 413, and 445 indicated they agreed that taking WAS important for their health and wellness which indicates to me that they have stopped using since the question asks about past use. They also did not have answers for the questions in the present tense. These should be included in the stopped group for further analysis. Record ID: 137, 308, 336, 365, 434, 452, 467, 469, 503, 571, 625, and 668 indicated they disagreed with this statement. To me this indicates they are in the stopped group since they did not provide answers to the present tense questions. Only Record IDs: 30, 50, and 186 have not fallen into a category yet. I will examine them below.

target_ids <- c(30, 50, 186)

SIMOA %>%
  filter(`Record ID` %in% target_ids) %>%
  View()

final_skipped_questions_analysis <- Skipped_question %>%
  filter(`Record ID` %in% target_ids) %>%
  select(`Record ID`, `How often are you currently taking them?`) %>%
  arrange(`How often are you currently taking them?`)

## The final_skipped_questions_analysis showed that the remaining Record IDs (30, 50, and 186) all indicated that they are not currently taking any BZRAs. For that reason they will be added to the stopped group. 





```

## Table 1 Code With Comparison (DEMOGRAPHICS)

Table 1 will include all demographic questions as well as the OSSS-3 and PHQ-2 scores since they are part of the initial data collection. The table will feature a column for the variable of interest, the total sample (AR), one column for those who are still using and a column for those who stopped. Furthermore, there will be a column at the end with a Cohen's d effect size comparing how different the stopped and using groups are from each other. 

```{r}
#| label: AR Calculations
#########
## Age ##
#########
AR_age <- AR %>%
  summarise(
    mean_age = mean(`What is your age?`, na.rm = TRUE),
    sd_age = sd(`What is your age?`, na.rm = TRUE),
    n = sum(!is.na(`What is your age?`))
  )
# Print the summary
View(AR_age)

############
## Gender ##
############
AR_gender <- AR %>%
  group_by(`To which gender identity do you most identify?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(AR)) * 100
  )
# View the summary
View(AR_gender)

#########
## Sex ##
#########
AR_sex <- AR %>%
  group_by(`What is your sex?Indicate your sex assigned at birth.`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(AR)) * 100
  )
# Print the summary
View(AR_sex)

###########################
## Province of Residence ##
###########################
AR_province <- AR %>%
  group_by(`Select the province or territory in which you currently live.`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(AR)) * 100
  )
# View the summary
View(AR_province)

#################################
## Highest Education Completed ##
#################################
AR_education <- AR %>%
  group_by(`What is the highest level of education you completed?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(AR)) * 100
  )
# View the summary
View(AR_education)

#######################
## Employment Status ##
#######################
AR_employment <- AR %>% 
  group_by(`What is your employment status?`) %>% 
  summarise(
    count = n(),
    percentage = (n() / nrow(AR)) * 100
  )
# View the summary
View(AR_employment)

#######################
## Driving Frequency ##
#######################
AR_driving_frequency <- AR %>%
  group_by(`How often do you drive?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(AR)) * 100
  )
# View the summary
View(AR_driving_frequency)

######################
## Household Income ##
######################
AR_income <- AR %>%
  group_by(`Which category matches your annual household income?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(AR)) * 100
  )
# View the summary
View(AR_income)

###########################
## People They Live With ## 
###########################
AR_living_situation <- AR %>%
  separate_rows(`With whom do you currently live? Select all that apply.`, sep = ";") %>%
  mutate(Living_Situation = str_trim(`With whom do you currently live? Select all that apply.`)) %>%
  filter(Living_Situation %in% c(
    "I live alone.",
    "I live with my spouse or partner.",
    "I live with my children.",
    "I live with friends or other family members.",
    "Other"
  )) %>%
  count(Living_Situation, name = "count") %>%
  mutate(percentage = (count / nrow(AR)) * 100)
View(AR_living_situation)

############
## OSSS-3 ##
############
# I will present the avg and sd for the numerical value of all the answers and provide a summary of the descriptive labels while idenitfying the # of people who fell into each of them using the cutoffs for the measure. 
# Breakdown by individual score
AR_osss_individual <- AR %>%
  count(OSSS_score = AR[[19]], name = "count") %>%
  arrange(OSSS_score) %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(AR_osss_individual)

# Breakdown by social support level
AR_osss_support <- AR %>%
  mutate(Social_Support_Level = case_when(
    AR[[19]] >= 3 & AR[[19]] <= 8 ~ "Poor Social Support",
    AR[[19]] >= 9 & AR[[19]] <= 11 ~ "Moderate Social Support",
    AR[[19]] >= 12 ~ "Strong Social Support",
    TRUE ~ NA_character_
  )) %>%
  count(Social_Support_Level, name = "count") %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(AR_osss_support)

###########
## PHQ-2 ##
###########
# I will present the avg and sd for the numerical value of al the answers and provide a summary of the descriptive labels while idenitfying the # of people who fell into each of them using the cutoffs for the measure. 
# Breakdown by individual PHQ-2 score
AR_phq2_individual <- AR %>%
  count(PHQ2_score = AR[[28]], name = "count") %>%
  arrange(PHQ2_score) %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(AR_phq2_individual)

# Breakdown by PHQ-2 depression status (using a cutoff score of 2 for possible depression)
AR_phq2_depression <- AR %>%
  mutate(PHQ2_status = case_when(
    AR[[28]] >= 2 ~ "Possible Depression (PHQ-2 ≥ 2)",
    TRUE ~ "No Depression (PHQ-2 < 2)"
  )) %>%
  count(PHQ2_status, name = "count") %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(AR_phq2_depression)
```

```{r}
#|label: stopped Calculations
#########
## Age ##
#########
stopped_age <- stopped %>%
  summarise(
    mean_age = mean(`What is your age?`, na.rm = TRUE),
    sd_age = sd(`What is your age?`, na.rm = TRUE),
    n = sum(!is.na(`What is your age?`))
  )
# Print the summary
View(stopped_age)

############
## Gender ##
############
stopped_gender <- stopped %>%
  group_by(`To which gender identity do you most identify?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(stopped)) * 100
  )
# View the summary
View(stopped_gender)

#########
## Sex ##
#########
stopped_sex <- stopped %>%
  group_by(`What is your sex?Indicate your sex assigned at birth.`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(stopped)) * 100
  )
# Print the summary
View(stopped_sex)

###########################
## Province of Residence ##
###########################
stopped_province <- stopped %>%
  group_by(`Select the province or territory in which you currently live.`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(stopped)) * 100
  )
# View the summary
View(stopped_province)


#################################
## Highest Education Completed ##
#################################
stopped_education <- stopped %>%
  group_by(`What is the highest level of education you completed?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(stopped)) * 100
  )
# View the summary
View(stopped_education)

#######################
## Employment Status ##
#######################
stopped_employment <- stopped %>% 
  group_by(`What is your employment status?`) %>% 
  summarise(
    count = n(),
    percentage = (n() / nrow(stopped)) * 100
  )
# View the summary
View(stopped_employment)

#######################
## Driving Frequency ##
#######################
stopped_driving_frequency <- stopped %>%
  group_by(`How often do you drive?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(stopped)) * 100
  )
# View the summary
View(stopped_driving_frequency)

######################
## Household Income ##
######################
stopped_income <- stopped %>%
  group_by(`Which category matches your annual household income?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(stopped)) * 100
  )
# View the summary
View(stopped_income)

###########################
## People They Live With ## 
###########################
stopped_living_situation <- stopped %>%
  separate_rows(`With whom do you currently live? Select all that apply.`, sep = ";") %>%
  mutate(Living_Situation = str_trim(`With whom do you currently live? Select all that apply.`)) %>%
  filter(Living_Situation %in% c(
    "I live alone.",
    "I live with my spouse or partner.",
    "I live with my children.",
    "I live with friends or other family members.",
    "Other"
  )) %>%
  count(Living_Situation, name = "count") %>%
  mutate(percentage = (count / nrow(stopped)) * 100)
View(stopped_living_situation)

############
## OSSS-3 ##
############
# I will present the avg and sd for the numerical value of all the answers and provide a summary of the descriptive labels while idenitfying the # of people who fell into each of them using the cutoffs for the measure. 
# Breakdown by individual score
stopped_osss_individual <- stopped %>%
  count(OSSS_score = stopped[[19]], name = "count") %>%
  arrange(OSSS_score) %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(stopped_osss_individual)

# Breakdown by social support level
stopped_osss_support <- stopped %>%
  mutate(Social_Support_Level = case_when(
    stopped[[19]] >= 3 & stopped[[19]] <= 8 ~ "Poor Social Support",
    stopped[[19]] >= 9 & stopped[[19]] <= 11 ~ "Moderate Social Support",
    stopped[[19]] >= 12 ~ "Strong Social Support",
    TRUE ~ NA_character_
  )) %>%
  count(Social_Support_Level, name = "count") %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(stopped_osss_support)


###########
## PHQ-2 ##
###########
# I will present the avg and sd for the numerical value of all the answers and provide a summary of the descriptive labels while idenitfying the # of people who fell into each of them using the cutoffs for the measure. 
# Breakdown by individual PHQ-2 score
stopped_phq2_individual <- stopped %>%
  count(PHQ2_score = stopped[[28]], name = "count") %>%
  arrange(PHQ2_score) %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(stopped_phq2_individual)

# Breakdown by PHQ-2 depression status (using a cutoff score of 2 for possible depression)
stopped_phq2_depression <- stopped %>%
  mutate(PHQ2_status = case_when(
    stopped[[28]] >= 2 ~ "Possible Depression (PHQ-2 ≥ 2)",
    TRUE ~ "No Depression (PHQ-2 < 2)"
  )) %>%
  count(PHQ2_status, name = "count") %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(stopped_phq2_depression)
```

```{r}
#| label: using Calculations
#########
## Age ##
#########
using_age <- using %>%
  summarise(
    mean_age = mean(`What is your age?`, na.rm = TRUE),
    sd_age = sd(`What is your age?`, na.rm = TRUE),
    n = sum(!is.na(`What is your age?`))
  )
# Print the summary
View(using_age)

############
## Gender ##
############
using_gender <- using %>%
  group_by(`To which gender identity do you most identify?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(using)) * 100
  )
# View the summary
View(using_gender)

#########
## Sex ##
#########
using_sex <- using %>%
  group_by(`What is your sex?Indicate your sex assigned at birth.`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(using)) * 100
  )
# Print the summary
View(using_sex)

###########################
## Province of Residence ##
###########################
using_province <- using %>%
  group_by(`Select the province or territory in which you currently live.`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(using)) * 100
  )
# View the summary
View(using_province)

#################################
## Highest Education Completed ##
#################################
using_education <- using %>%
  group_by(`What is the highest level of education you completed?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(using)) * 100
  )
# View the summary
View(using_education)

#######################
## Employment Status ##
#######################
using_employment <- using %>% 
  group_by(`What is your employment status?`) %>% 
  summarise(
    count = n(),
    percentage = (n() / nrow(using)) * 100
  )
# View the summary
View(using_employment)

#######################
## Driving Frequency ##
#######################
using_driving_frequency <- using %>%
  group_by(`How often do you drive?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(using)) * 100
  )
# View the summary
View(using_driving_frequency)

######################
## Household Income ##
######################
using_income <- using %>%
  group_by(`Which category matches your annual household income?`) %>%
  summarise(
    count = n(),
    percentage = (n() / nrow(using)) * 100
  )
# View the summary
View(using_income)

###########################
## People They Live With ## 
###########################
using_living_situation <- using %>%
  separate_rows(`With whom do you currently live? Select all that apply.`, sep = ";") %>%
  mutate(Living_Situation = str_trim(`With whom do you currently live? Select all that apply.`)) %>%
  filter(Living_Situation %in% c(
    "I live alone.",
    "I live with my spouse or partner.",
    "I live with my children.",
    "I live with friends or other family members.",
    "Other"
  )) %>%
  count(Living_Situation, name = "count") %>%
  mutate(percentage = (count / nrow(using)) * 100)
View(using_living_situation)

############
## OSSS-3 ##
############
# Breakdown by individual score for 'using' group
using_osss_individual <- using %>%
  count(OSSS_score = using[[19]], name = "count") %>%
  arrange(OSSS_score) %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(using_osss_individual)

# Breakdown by social support level for 'using' group
using_osss_support <- using %>%
  mutate(Social_Support_Level = case_when(
    using[[19]] >= 3 & using[[19]] <= 8 ~ "Poor Social Support",
    using[[19]] >= 9 & using[[19]] <= 11 ~ "Moderate Social Support",
    using[[19]] >= 12 ~ "Strong Social Support",
    TRUE ~ NA_character_
  )) %>%
  count(Social_Support_Level, name = "count") %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(using_osss_support)

###########
## PHQ-2 ##
###########
# Breakdown by individual PHQ-2 score for 'using' group
using_phq2_individual <- using %>%
  count(PHQ2_score = using[[28]], name = "count") %>%
  arrange(PHQ2_score) %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(using_phq2_individual)

# Breakdown by PHQ-2 depression status for 'using' group (using a cutoff score of 2 for possible depression)
using_phq2_depression <- using %>%
  mutate(PHQ2_status = case_when(
    using[[28]] >= 2 ~ "Possible Depression (PHQ-2 ≥ 2)",
    TRUE ~ "No Depression (PHQ-2 < 2)"
  )) %>%
  count(PHQ2_status, name = "count") %>%
  mutate(percentage = (count / sum(count, na.rm = TRUE)) * 100)
View(using_phq2_depression)
```

```{r}
#| label: Comparison
#########
## Age ##
#########
# Calculate Cohen's d for Age comparison between 'using' and 'stopped'
using_age <- using %>%
  summarise(
    mean_age = mean(`What is your age?`, na.rm = TRUE),
    sd_age = sd(`What is your age?`, na.rm = TRUE),
    n = sum(!is.na(`What is your age?`))
  )

stopped_age <- stopped %>%
  summarise(
    mean_age = mean(`What is your age?`, na.rm = TRUE),
    sd_age = sd(`What is your age?`, na.rm = TRUE),
    n = sum(!is.na(`What is your age?`))
  )

# Calculate Cohen's d
pooled_sd_age <- sqrt(((using_age$n - 1) * using_age$sd_age^2 + (stopped_age$n - 1) * stopped_age$sd_age^2) /
                      (using_age$n + stopped_age$n - 2))
T1_cohen_d_age <- (using_age$mean_age - stopped_age$mean_age) / pooled_sd_age

############
## Gender ##
############
# Exclude the 'Non-binary' category from both datasets
using_gender_filtered <- using %>%
  filter(`To which gender identity do you most identify?` != "Non-binary")

stopped_gender_filtered <- stopped %>%
  filter(`To which gender identity do you most identify?` != "Non-binary")

# Create contingency tables for filtered data
table_using_filtered <- table(using_gender_filtered$`To which gender identity do you most identify?`)
table_stopped_filtered <- table(stopped_gender_filtered$`To which gender identity do you most identify?`)

# Run the chi-squared test on the filtered data
chisq_test_filtered <- chisq.test(rbind(table_using_filtered, table_stopped_filtered))

# Display the chi-squared test results
chisq_test_filtered

# Calculate Cramér's V for the filtered data
T1_cramers_v_filtered <- sqrt(chisq_test_filtered$statistic / (sum(table_using_filtered) * (min(dim(rbind(table_using_filtered, table_stopped_filtered))) - 1)))

# Display Cramér's V
T1_cramers_v_filtered

#########
## Sex ##
#########
using_sex_table <- table(using$`What is your sex?Indicate your sex assigned at birth.`)
stopped_sex_table <- table(stopped$`What is your sex?Indicate your sex assigned at birth.`)

# Combine them
sex_table <- rbind(using_sex_table, stopped_sex_table)

# Cramér's V for Sex
T1_sex_cramers_v <- assocstats(sex_table)$cramer

###########################
## Province of Residence ##
###########################
# Ensure that both tables have the same factor levels
province_levels <- union(levels(factor(using$`Select the province or territory in which you currently live.`)),
                         levels(factor(stopped$`Select the province or territory in which you currently live.`)))

using_province_table <- table(factor(using$`Select the province or territory in which you currently live.`, levels = province_levels))
stopped_province_table <- table(factor(stopped$`Select the province or territory in which you currently live.`, levels = province_levels))

# Combine them after ensuring the factor levels are consistent
province_table <- rbind(using_province_table, stopped_province_table)

# Cramér's V for Province
T1_province_cramers_v <- assocstats(province_table)$cramer

#################################
## Highest Education Completed ##
#################################
using_education_table <- table(using$`What is the highest level of education you completed?`)
stopped_education_table <- table(stopped$`What is the highest level of education you completed?`)

# Combine them
education_table <- rbind(using_education_table, stopped_education_table)

# Cramér's V for Education
T1_education_cramers_v <- assocstats(education_table)$cramer

#######################
## Employment Status ##
#######################
using_employment_table <- table(using$`What is your employment status?`)
stopped_employment_table <- table(stopped$`What is your employment status?`)

# Combine them
employment_table <- rbind(using_employment_table, stopped_employment_table)

# Cramér's V for Employment
T1_employment_cramers_v <- assocstats(employment_table)$cramer

#######################
## Driving Frequency ##
#######################
using_driving_frequency_table <- table(using$`How often do you drive?`)
stopped_driving_frequency_table <- table(stopped$`How often do you drive?`)

# Combine them
driving_frequency_table <- rbind(using_driving_frequency_table, stopped_driving_frequency_table)

# Cramér's V for Driving Frequency
T1_driving_frequency_cramers_v <- assocstats(driving_frequency_table)$cramer

######################
## Household Income ##
######################
using_income_table <- table(using$`Which category matches your annual household income?`)
stopped_income_table <- table(stopped$`Which category matches your annual household income?`)

# Combine them
income_table <- rbind(using_income_table, stopped_income_table)

# Cramér's V for Household Income
T1_income_cramers_v <- assocstats(income_table)$cramer

###########################
## People They Live With ##
###########################
# Combine the two datasets by Living_Situation
combined_living_situation <- full_join(using_living_situation, stopped_living_situation, 
                                       by = "Living_Situation", 
                                       suffix = c("_using", "_stopped"))

# Replace NA values with 0 for count columns
combined_living_situation[is.na(combined_living_situation)] <- 0

# Create a contingency table
contingency_table <- matrix(c(
  combined_living_situation$count_using,
  combined_living_situation$count_stopped
), ncol = 2, byrow = FALSE)
rownames(contingency_table) <- combined_living_situation$Living_Situation
colnames(contingency_table) <- c("Using", "Stopped")

# Calculate Cramér's V
cramers_v <- assocstats(contingency_table)$cramer

############
## OSSS-3 ##
############
# Create a combined dataframe with group and OSSS-3 level
osss_combined <- bind_rows(
  using %>% mutate(Group = "Using"),
  stopped %>% mutate(Group = "Stopped")
) %>%
  mutate(OSSS_Level = case_when(
    .[[19]] >= 3 & .[[19]] <= 8 ~ "Poor",
    .[[19]] >= 9 & .[[19]] <= 11 ~ "Moderate",
    .[[19]] >= 12 ~ "Strong",
    TRUE ~ NA_character_
  )) %>%
  filter(!is.na(OSSS_Level))

# Create the contingency table
osss_table <- table(osss_combined$Group, osss_combined$OSSS_Level)

# Calculate Cramér's V
T1_osss_cramers_v <- assocstats(osss_table)
print(T1_osss_cramers_v)

###########
## PHQ-2 ##
###########
# Create a table of PHQ-2 depression status by group
phq_table <- table(
  Group = c(rep("Using", nrow(using)), rep("Stopped", nrow(stopped))),
  Depression_Status = c(
    ifelse(using[[28]] >= 2, "Possible Depression (PHQ-2 ≥ 2)", "No Depression (PHQ-2 < 2)"),
    ifelse(stopped[[28]] >= 2, "Possible Depression (PHQ-2 ≥ 2)", "No Depression (PHQ-2 < 2)")
  )
)
# Calculate Cramér's V
T1_phq_cramers_v <- assocstats(phq_table)
print(T1_phq_cramers_v)

# View the output
# For Cohen's d (e.g., comparing means between two groups for age)
print(paste("Cohen's d for age comparison:", T1_cohen_d_age))

# For Cramér's V (e.g., for categorical variables like sex, province, etc.)
print(paste("Cramér's V for sex comparison:", T1_sex_cramers_v))
print(paste("Cramér's V for province comparison:", T1_province_cramers_v))
print(paste("Cramér's V for education comparison:", T1_education_cramers_v))
print(paste("Cramér's V for employment comparison:", T1_employment_cramers_v))
print(paste("Cramér's V for driving frequency comparison:", T1_driving_frequency_cramers_v))
print(paste("Cramér's V for income comparison:", T1_income_cramers_v))

# For general Cramér's V statistic (living situation comparison)
print(paste("Cramér's V for living situation comparison:", cramers_v))
```


## Table 2 Code With Comparison (HEALTH INFORMATION)

Table 2 will include all health information variables we want to look at and compare between the groups. The table will feature a column for the variable of interest, the total sample (AR), one column for those who are still using and a column for those who stopped. 

## Table 3 Code With Comparison (PERSONALITY MEASURES)




